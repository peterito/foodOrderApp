{"version":3,"sources":["../../src/services/meal.service.js"],"names":["MealService","fetchAllMeals","dummyData","meals","map","meal","newMeal","Meal","id","name","size","price","addMeal","mealLength","length","undefined","push","lastId","newId","getMeal","find","updateMeal","mealId","splice","deleteMeal"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,WAAW,GAAG;AAClB;AACAC,EAAAA,aAFkB,2BAEF;AACd,WAAOC,mBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AACnC,UAAMC,OAAO,GAAG,IAAIC,aAAJ,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAeJ,IAAI,CAACI,IAApB;AACAH,MAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAApB;AACAJ,MAAAA,OAAO,CAACK,KAAR,GAAgBN,IAAI,CAACM,KAArB;AACA,aAAOL,OAAP;AACD,KAPM,CAAP;AAQD,GAXiB;AAalB;AACAM,EAAAA,OAdkB,mBAcVP,IAdU,EAcJ;AACZ,QAAMQ,UAAU,GAAGX,mBAAUC,KAAV,CAAgBW,MAAnC,CADY,CAGZ;;AACA,QAAID,UAAU,KAAKE,SAAf,IAA4BF,UAAU,IAAI,CAA9C,EAAiD;AAC/CR,MAAAA,IAAI,CAACG,EAAL,GAAU,CAAV;;AACAN,yBAAUC,KAAV,CAAgBa,IAAhB,CAAqBX,IAArB;AACD,KAHD,MAGO;AACL,UAAMY,MAAM,GAAGf,mBAAUC,KAAV,CAAgBU,UAAU,GAAG,CAA7B,EAAgCL,EAA/C;AACA,UAAMU,KAAK,GAAGD,MAAM,GAAG,CAAvB;AACAZ,MAAAA,IAAI,CAACG,EAAL,GAAUU,KAAV;;AACAhB,yBAAUC,KAAV,CAAgBa,IAAhB,CAAqBX,IAArB;AACD;;AACD,WAAOA,IAAP;AACD,GA5BiB;AA8BlB;AACAc,EAAAA,OA/BkB,mBA+BVX,EA/BU,EA+BN;AACV,QAAMH,IAAI,GAAGH,mBAAUC,KAAV,CAAgBiB,IAAhB,CAAqB,UAAAf,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,IAAWA,EAAf;AAAA,KAAzB,CAAb;;AACA,WAAOH,IAAI,IAAI,EAAf;AACD,GAlCiB;AAoClB;AACAgB,EAAAA,UArCkB,sBAqCPb,EArCO,EAqCHa,WArCG,EAqCS;AACzB;AACA,QAAMC,MAAM,GAAGpB,mBAAUC,KAAV,CAAgBiB,IAAhB,CAAqB,UAAAf,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,IAAWA,EAAf;AAAA,KAAzB,CAAf;;AACAa,IAAAA,WAAU,CAACb,EAAX,GAAgBc,MAAM,CAACd,EAAvB;;AACAN,uBAAUC,KAAV,CAAgBoB,MAAhB,CAAuBD,MAAM,CAACd,EAAP,GAAY,CAAnC,EAAsC,CAAtC,EAAyCa,WAAzC;;AACA,WAAOA,WAAP;AACD,GA3CiB;AA6ClB;AACAG,EAAAA,UA9CkB,sBA8CPhB,EA9CO,EA8CH;AACb;AACA,QAAMH,IAAI,GAAGH,mBAAUC,KAAV,CAAgBiB,IAAhB,CAAqB,UAAAf,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,IAAWA,EAAf;AAAA,KAAzB,CAAb;;AACAN,uBAAUC,KAAV,CAAgBoB,MAAhB,CAAuBlB,IAAI,CAACG,EAAL,GAAU,CAAjC,EAAoC,CAApC;;AACA,WAAO,EAAP;AACD;AAnDiB,CAApB;eAsDeR,W","sourcesContent":["import Meal from '../models/meal.model';\r\nimport dummyData from '../utils/dummyData';\r\n\r\n// created meal service object;\r\nconst MealService = {\r\n  // fetching all the data/meals\r\n  fetchAllMeals() {\r\n    return dummyData.meals.map((meal) => {\r\n      const newMeal = new Meal();\r\n      newMeal.id = meal.id;\r\n      newMeal.name = meal.name;\r\n      newMeal.size = meal.size;\r\n      newMeal.price = meal.price;\r\n      return newMeal;\r\n    });\r\n  },\r\n\r\n  // adding meal\r\n  addMeal(meal) {\r\n    const mealLength = dummyData.meals.length;\r\n\r\n    // checking if the array is empty to avoid undefined errors.\r\n    if (mealLength === undefined || mealLength == 0) {\r\n      meal.id = 1;\r\n      dummyData.meals.push(meal);\r\n    } else {\r\n      const lastId = dummyData.meals[mealLength - 1].id;\r\n      const newId = lastId + 1;\r\n      meal.id = newId;\r\n      dummyData.meals.push(meal);\r\n    }\r\n    return meal;\r\n  },\r\n\r\n  // getting meal by id\r\n  getMeal(id) {\r\n    const meal = dummyData.meals.find(meal => meal.id == id);\r\n    return meal || {};\r\n  },\r\n\r\n  // updating meal by id\r\n  updateMeal(id, updateMeal) {\r\n    // checking for meal id, deleting and updating the array\r\n    const mealId = dummyData.meals.find(meal => meal.id == id);\r\n    updateMeal.id = mealId.id;\r\n    dummyData.meals.splice(mealId.id - 1, 1, updateMeal);\r\n    return updateMeal;\r\n  },\r\n\r\n  // delete meal by id\r\n  deleteMeal(id) {\r\n    // checking for meal id and deleting it from the array\r\n    const meal = dummyData.meals.find(meal => meal.id == id);\r\n    dummyData.meals.splice(meal.id - 1, 1);\r\n    return {};\r\n  },\r\n};\r\n\r\nexport default MealService;\r\n"],"file":"meal.service.js"}