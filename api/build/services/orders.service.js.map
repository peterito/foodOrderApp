{"version":3,"sources":["../../src/services/orders.service.js"],"names":["OrdersService","getAllOrders","dummyData","meals","map","order","orders","MealModel","id","name","size","price","getSingleOrder","find","addToOrder","orderLength","length","undefined","push","lastId","newId","updateOrder","orderId","splice","deleteOrder"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,aAAa,GAAG;AAEpB;AACAC,EAAAA,YAHoB,0BAGL;AACb,WAAOC,mBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,KAAD,EAAW;AACpC,UAAMC,MAAM,GAAG,IAAIC,aAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,EAAP,GAAYH,KAAK,CAACG,EAAlB;AACAF,MAAAA,MAAM,CAACG,IAAP,GAAcJ,KAAK,CAACI,IAApB;AACAH,MAAAA,MAAM,CAACI,IAAP,GAAcL,KAAK,CAACK,IAApB;AACAJ,MAAAA,MAAM,CAACK,KAAP,GAAeN,KAAK,CAACM,KAArB;AACA,aAAOL,MAAP;AACD,KAPM,CAAP;AAQD,GAZmB;AAcpB;AACAM,EAAAA,cAfoB,0BAeLJ,EAfK,EAeD;AACjB,QAAMF,MAAM,GAAGJ,mBAAUC,KAAV,CAAgBU,IAAhB,CAAqB,UAAAR,KAAK;AAAA,aAAIA,KAAK,CAACG,EAAN,IAAYA,EAAhB;AAAA,KAA1B,CAAf;;AACA,WAAOF,MAAM,IAAI,EAAjB;AACD,GAlBmB;AAoBpB;AACAQ,EAAAA,UArBoB,sBAqBTT,KArBS,EAqBF;AAChB,QAAMU,WAAW,GAAGb,mBAAUC,KAAV,CAAgBa,MAApC,CADgB,CAGhB;;AACA,QAAID,WAAW,KAAKE,SAAhB,IAA6BF,WAAW,IAAI,CAAhD,EAAmD;AACjDV,MAAAA,KAAK,CAACG,EAAN,GAAW,CAAX;;AACAN,yBAAUC,KAAV,CAAgBe,IAAhB,CAAqBb,KAArB;AACD,KAHD,MAGO;AACL,UAAMc,MAAM,GAAGjB,mBAAUC,KAAV,CAAgBY,WAAW,GAAG,CAA9B,EAAiCP,EAAhD;AACA,UAAMY,KAAK,GAAGD,MAAM,GAAG,CAAvB;AACAd,MAAAA,KAAK,CAACG,EAAN,GAAWY,KAAX;;AACAlB,yBAAUC,KAAV,CAAgBe,IAAhB,CAAqBb,KAArB;AACD;;AACD,WAAOA,KAAP;AACD,GAnCmB;AAqCpB;AACAgB,EAAAA,WAtCoB,uBAsCRb,EAtCQ,EAsCJa,YAtCI,EAsCS;AAC3B;AACA,QAAMC,OAAO,GAAGpB,mBAAUC,KAAV,CAAgBU,IAAhB,CAAqB,UAAAR,KAAK;AAAA,aAAIA,KAAK,CAACG,EAAN,IAAYA,EAAhB;AAAA,KAA1B,CAAhB;;AACAa,IAAAA,YAAW,CAACb,EAAZ,GAAiBc,OAAO,CAACd,EAAzB;;AACAN,uBAAUC,KAAV,CAAgBoB,MAAhB,CAAuBD,OAAO,CAACd,EAAR,GAAa,CAApC,EAAuC,CAAvC,EAA0Ca,YAA1C;;AACA,WAAOA,YAAP;AACD,GA5CmB;AA8CpB;AACAG,EAAAA,WA/CoB,uBA+CRhB,EA/CQ,EA+CJ;AACd;AACA,QAAMH,KAAK,GAAGH,mBAAUC,KAAV,CAAgBU,IAAhB,CAAqB,UAAAR,KAAK;AAAA,aAAIA,KAAK,CAACG,EAAN,IAAYA,EAAhB;AAAA,KAA1B,CAAd;;AACAN,uBAAUC,KAAV,CAAgBoB,MAAhB,CAAuBlB,KAAK,CAACG,EAAN,GAAW,CAAlC,EAAqC,CAArC;;AACA,WAAO,EAAP;AACD;AApDmB,CAAtB;eAwDeR,a","sourcesContent":["import MealModel from '../models/Meal.model';\r\nimport dummyData from '../utils/dummyData';\r\n\r\nconst OrdersService = {\r\n\r\n  // fetching all the orders\r\n  getAllOrders() {\r\n    return dummyData.meals.map((order) => {\r\n      const orders = new MealModel();\r\n      orders.id = order.id;\r\n      orders.name = order.name;\r\n      orders.size = order.size;\r\n      orders.price = order.price;\r\n      return orders;\r\n    });\r\n  },\r\n\r\n  // getting order by id\r\n  getSingleOrder(id) {\r\n    const orders = dummyData.meals.find(order => order.id == id);\r\n    return orders || {};\r\n  },\r\n\r\n  // adding to order list\r\n  addToOrder(order) {\r\n    const orderLength = dummyData.meals.length;\r\n\r\n    // checking if the array is empty to avoid undefined errors.\r\n    if (orderLength === undefined || orderLength == 0) {\r\n      order.id = 1;\r\n      dummyData.meals.push(order);\r\n    } else {\r\n      const lastId = dummyData.meals[orderLength - 1].id;\r\n      const newId = lastId + 1;\r\n      order.id = newId;\r\n      dummyData.meals.push(order);\r\n    }\r\n    return order;\r\n  },\r\n\r\n  // updating order\r\n  updateOrder(id, updateOrder) {\r\n    // checking for meal id, deleting and updating the array\r\n    const orderId = dummyData.meals.find(order => order.id == id);\r\n    updateOrder.id = orderId.id;\r\n    dummyData.meals.splice(orderId.id - 1, 1, updateOrder);\r\n    return updateOrder;\r\n  },\r\n\r\n  // delete order by id\r\n  deleteOrder(id) {\r\n    // checking for order id and deleting it from the array\r\n    const order = dummyData.meals.find(order => order.id == id);\r\n    dummyData.meals.splice(order.id - 1, 1);\r\n    return {};\r\n  },\r\n\r\n};\r\n\r\nexport default OrdersService;\r\n"],"file":"orders.service.js"}